// Generated by view binder compiler. Do not edit!
package com.example.bosqueapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.bosqueapp.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CrearDispositivoBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final MaterialButton backButton;

  @NonNull
  public final MaterialCardView deviceCard;

  @NonNull
  public final TextInputEditText deviceDescriptionInput;

  @NonNull
  public final TextInputEditText deviceNameInput;

  @NonNull
  public final TextInputEditText deviceTypeInput;

  @NonNull
  public final MaterialButton saveDeviceButton;

  @NonNull
  public final TextView titleCreateDevice;

  @NonNull
  public final MaterialButton viewDeviceButton;

  private CrearDispositivoBinding(@NonNull RelativeLayout rootView,
      @NonNull MaterialButton backButton, @NonNull MaterialCardView deviceCard,
      @NonNull TextInputEditText deviceDescriptionInput, @NonNull TextInputEditText deviceNameInput,
      @NonNull TextInputEditText deviceTypeInput, @NonNull MaterialButton saveDeviceButton,
      @NonNull TextView titleCreateDevice, @NonNull MaterialButton viewDeviceButton) {
    this.rootView = rootView;
    this.backButton = backButton;
    this.deviceCard = deviceCard;
    this.deviceDescriptionInput = deviceDescriptionInput;
    this.deviceNameInput = deviceNameInput;
    this.deviceTypeInput = deviceTypeInput;
    this.saveDeviceButton = saveDeviceButton;
    this.titleCreateDevice = titleCreateDevice;
    this.viewDeviceButton = viewDeviceButton;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CrearDispositivoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CrearDispositivoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.crear_dispositivo, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CrearDispositivoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backButton;
      MaterialButton backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.deviceCard;
      MaterialCardView deviceCard = ViewBindings.findChildViewById(rootView, id);
      if (deviceCard == null) {
        break missingId;
      }

      id = R.id.deviceDescriptionInput;
      TextInputEditText deviceDescriptionInput = ViewBindings.findChildViewById(rootView, id);
      if (deviceDescriptionInput == null) {
        break missingId;
      }

      id = R.id.deviceNameInput;
      TextInputEditText deviceNameInput = ViewBindings.findChildViewById(rootView, id);
      if (deviceNameInput == null) {
        break missingId;
      }

      id = R.id.deviceTypeInput;
      TextInputEditText deviceTypeInput = ViewBindings.findChildViewById(rootView, id);
      if (deviceTypeInput == null) {
        break missingId;
      }

      id = R.id.saveDeviceButton;
      MaterialButton saveDeviceButton = ViewBindings.findChildViewById(rootView, id);
      if (saveDeviceButton == null) {
        break missingId;
      }

      id = R.id.titleCreateDevice;
      TextView titleCreateDevice = ViewBindings.findChildViewById(rootView, id);
      if (titleCreateDevice == null) {
        break missingId;
      }

      id = R.id.viewDeviceButton;
      MaterialButton viewDeviceButton = ViewBindings.findChildViewById(rootView, id);
      if (viewDeviceButton == null) {
        break missingId;
      }

      return new CrearDispositivoBinding((RelativeLayout) rootView, backButton, deviceCard,
          deviceDescriptionInput, deviceNameInput, deviceTypeInput, saveDeviceButton,
          titleCreateDevice, viewDeviceButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
