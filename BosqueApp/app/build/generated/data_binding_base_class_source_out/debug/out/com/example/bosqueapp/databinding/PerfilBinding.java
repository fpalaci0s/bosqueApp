// Generated by view binder compiler. Do not edit!
package com.example.bosqueapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.bosqueapp.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PerfilBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout bottomNavigation;

  @NonNull
  public final MaterialButton editProfileButton;

  @NonNull
  public final TextView emailText;

  @NonNull
  public final ImageButton homeButton;

  @NonNull
  public final ImageButton notificationsButton;

  @NonNull
  public final TextView phoneText;

  @NonNull
  public final ImageView profileImage;

  @NonNull
  public final ImageButton userButton;

  @NonNull
  public final TextView usernameText;

  private PerfilBinding(@NonNull RelativeLayout rootView, @NonNull LinearLayout bottomNavigation,
      @NonNull MaterialButton editProfileButton, @NonNull TextView emailText,
      @NonNull ImageButton homeButton, @NonNull ImageButton notificationsButton,
      @NonNull TextView phoneText, @NonNull ImageView profileImage, @NonNull ImageButton userButton,
      @NonNull TextView usernameText) {
    this.rootView = rootView;
    this.bottomNavigation = bottomNavigation;
    this.editProfileButton = editProfileButton;
    this.emailText = emailText;
    this.homeButton = homeButton;
    this.notificationsButton = notificationsButton;
    this.phoneText = phoneText;
    this.profileImage = profileImage;
    this.userButton = userButton;
    this.usernameText = usernameText;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PerfilBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PerfilBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.perfil, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PerfilBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottomNavigation;
      LinearLayout bottomNavigation = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavigation == null) {
        break missingId;
      }

      id = R.id.editProfileButton;
      MaterialButton editProfileButton = ViewBindings.findChildViewById(rootView, id);
      if (editProfileButton == null) {
        break missingId;
      }

      id = R.id.emailText;
      TextView emailText = ViewBindings.findChildViewById(rootView, id);
      if (emailText == null) {
        break missingId;
      }

      id = R.id.homeButton;
      ImageButton homeButton = ViewBindings.findChildViewById(rootView, id);
      if (homeButton == null) {
        break missingId;
      }

      id = R.id.notificationsButton;
      ImageButton notificationsButton = ViewBindings.findChildViewById(rootView, id);
      if (notificationsButton == null) {
        break missingId;
      }

      id = R.id.phoneText;
      TextView phoneText = ViewBindings.findChildViewById(rootView, id);
      if (phoneText == null) {
        break missingId;
      }

      id = R.id.profileImage;
      ImageView profileImage = ViewBindings.findChildViewById(rootView, id);
      if (profileImage == null) {
        break missingId;
      }

      id = R.id.userButton;
      ImageButton userButton = ViewBindings.findChildViewById(rootView, id);
      if (userButton == null) {
        break missingId;
      }

      id = R.id.usernameText;
      TextView usernameText = ViewBindings.findChildViewById(rootView, id);
      if (usernameText == null) {
        break missingId;
      }

      return new PerfilBinding((RelativeLayout) rootView, bottomNavigation, editProfileButton,
          emailText, homeButton, notificationsButton, phoneText, profileImage, userButton,
          usernameText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
